import os
import cv2
import numpy as np
from insightface.app import FaceAnalysis
from insightface.model_zoo import get_model

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞ CPU
# providers = ['CPUExecutionProvider']
providers = ['CUDAExecutionProvider', 'CPUExecutionProvider']


# ‡πÇ‡∏´‡∏•‡∏î face detector
print("üîç Loading face detector...")
face_app = FaceAnalysis(name='buffalo_l', providers=providers)
# face_app.prepare(ctx_id=0)
face_app.prepare(ctx_id=0, det_size=(640, 640))

# ‡πÇ‡∏´‡∏•‡∏î face swapper
swapper_model_path = os.path.join("models", "inswapper_128.onnx")
if not os.path.exists(swapper_model_path):
    raise FileNotFoundError(f"Swapper model not found: {swapper_model_path}")

print("üîÅ Loading face swapper...")
swapper = get_model(swapper_model_path, providers=providers)

# ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û source face ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö
# source_path = "images/gongyu.jpg"
# source_path = "images/Cha_Eun-woo.png"
# source_path = "images/Cha_Eun-woo.jpg"
# source_path = "images/nunew.jpeg"
source_path = "images/prayut.jpg"
# source_path = "images/tono.jpg"
if not os.path.exists(source_path):
    raise FileNotFoundError(f"Source image not found: {source_path}")

source_img = cv2.imread(source_path)
source_faces = face_app.get(source_img)
if not source_faces:
    raise RuntimeError("No face detected in source image.")
source_face = source_faces[0]

# ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á
print("üé• Starting webcam...")
cap = cv2.VideoCapture(0)  # ‡πÉ‡∏ä‡πâ 0 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å
cap.set(cv2.CAP_PROP_FRAME_WIDTH, 640)
cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)

# Background
# bg_img = cv2.GaussianBlur(frame, (55, 55), 0)

bg_path = "images/tono.jpg"
bg_img = cv2.imread(bg_path)
bg_img = cv2.resize(bg_img, (640, 480))

if not cap.isOpened():
    raise RuntimeError("‚ùå Cannot open webcam.")

while True:
    ret, frame = cap.read()
    if not ret:
        break

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏ô‡πÄ‡∏ü‡∏£‡∏°
    faces = face_app.get(frame)
    for face in faces:
        # ‡∏™‡∏•‡∏±‡∏ö‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤
        try:
            frame = swapper.get(frame, face, source_face, paste_back=True)
        except Exception as e:
            print(f"‚ö†Ô∏è Error in swapping: {e}")

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    cv2.imshow("Realtime Deepfake Face Swap", frame)

    # ‡∏Å‡∏î 'q' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# ‡∏õ‡∏¥‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á
cap.release()
cv2.destroyAllWindows()
print("‚úÖ Webcam stopped.")
